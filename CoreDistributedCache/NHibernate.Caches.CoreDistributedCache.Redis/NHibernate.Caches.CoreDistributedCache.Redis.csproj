<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="../../NHibernate.Caches.props" />
  <PropertyGroup>
    <Product>NHibernate.Caches.CoreDistributedCache.Redis</Product>
    <Title>NHibernate.Caches.CoreDistributedCache.Redis</Title>
    <Description>Redis cache provider for NHibernate using .Net Core IDistributedCache (Microsoft.Extensions.Caching.Redis).
    Consider using NHibernate.Caches.StackExchangeRedis instead: IDistributedCache contract limits the Redis features we can use.</Description>
    <!-- Targeting net461 explicitly in order to avoid https://github.com/dotnet/standard/issues/506 for net461 consumers-->
    <TargetFrameworks>net461;netstandard2.0</TargetFrameworks>
    <SignAssembly>True</SignAssembly>
    <AssemblyOriginatorKeyFile>..\..\NHibernate.Caches.snk</AssemblyOriginatorKeyFile>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <PackageReleaseNotes>* New Feature
    * #83 Add support for custom serializer in CoreDistributedCache
    * #79 Allow replacing ConfigurationManager for reading values

* Task
    * #86 Update SourceLink package to its release version</PackageReleaseNotes>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)' == 'net461'">
    <DefineConstants>NETFX;$(DefineConstants)</DefineConstants>
  </PropertyGroup>
  <ItemGroup>
    <None Include="..\..\NHibernate.Caches.snk" Link="NHibernate.snk" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\NHibernate.Caches.CoreDistributedCache\NHibernate.Caches.CoreDistributedCache.csproj" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="../../readme.md">
      <PackagePath>./NHibernate.Caches.readme.md</PackagePath>
    </Content>
    <Content Include="../../LICENSE.txt">
      <PackagePath>./NHibernate.Caches.license.txt</PackagePath>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Caching.StackExchangeRedis" Version="2.2.0" />
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="all" />
  </ItemGroup>
</Project>
